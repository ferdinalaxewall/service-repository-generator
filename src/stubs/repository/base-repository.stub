<?php

declare(strict_types=1);

namespace App\Repositories;

use Illuminate\Support\Collection;
use Illuminate\Database\Eloquent\Model;

class BaseRepository
{
    /**
     * create the variable of repository eloquent model instance.
     *
     * @var \Illuminate\Database\Eloquent\Model
     */
    protected $model;

    /**
     * create a new repository eloquent model instance.
     *
     * @param \Illuminate\Database\Eloquent\Model $model
     *
     * @return void
     */
    public function __construct($model)
    {
        $this->model = $model;
    }

    /**
     * display all model resources.
     *
     * @param string $sortColumn
     * @param string $sortBy
     *
     * @return Model|Collection|array
     */
    public function findAll(string $sortColumn = 'created_at', string $sortBy = 'DESC'): Model|Collection|array
    {
        return $this->model->orderBy($sortColumn, $sortBy)->get();
    }

    /**
     * show the specific resource that related by unique key.
     *
     * @param int $id
     *
     * @return Model|Collection|array
     */
    public function findOneById(int $id): Model|Collection|array
    {
        return $this->model->where('id', $id)->first();
    }

    /**
     * show the specific resource that related by unique key.
     *
     * @param string $uuid
     *
     * @return Model|Collection|array
     */
    public function findOneByUUID(string $uuid): Model|Collection|array
    {
        return $this->model->where('uuid', $uuid)->first();
    }

    /**
     * create eloquent model resources.
     *
     * @param Model|Collection|array $dto
     *
     * @return Model|Collection|array
     */
    public function create(Model|Collection|array $dto): Model|Collection|array
    {
        return $this->model->create($dto);
    }

    /**
     * update the specified resource that related by unique key.
     *
     * @param int $id
     * @param Model|Collection|array $dto
     *
     * @return bool
     */
    public function updateById(int $id, Model|Collection|array $dto): bool
    {
        return $this->model->where('id', $id)->update($dto);
    }

    /**
     * update the specified resource that related by unique key.
     *
     * @param string $uuid
     * @param Model|Collection|array $dto
     *
     * @return bool
     */
    public function updateByUUID(string $uuid, Model|Collection|array $dto): bool
    {
        return $this->model->where('uuid', $uuid)->update($dto);
    }

    /**
     * remove the specified resource that related by unique key.
     *
     * @param int $id
     *
     * @return void
     */
    public function deleteById(int $id): void
    {
        $this->model->where('id', $id)->delete();
    }

    /**
     * remove the specified resource that related by unique key.
     *
     * @param string $uuid
     *
     * @return void
     */
    public function deleteByUUID(string $uuid): void
    {
        $this->model->where('uuid', $uuid)->delete();
    }
}